Partially revert https://gitlab.com/veloren/veloren/-/commit/fae849e95198
until lang/rust >= 1.85 update per https://github.com/rust-lang/rust/commit/fe521506a61c

error[E0277]: expected a `FnMut(&mut veloren_common::comp::ControlAction)` closure, found `RangeFull`
    --> common/systems/src/mount.rs:74:49
     |
74   | ...                   .extract_if(.., |action| match action {
     |                        ---------- ^^ expected an `FnMut(&mut veloren_common::comp::ControlAction)` closure, found `RangeFull`
     |                        |
     |                        required by a bound introduced by this call
     |
     = help: the trait `for<'a> FnMut(&'a mut veloren_common::comp::ControlAction)` is not implemented for `RangeFull`
note: required by a bound in `Vec::<T, A>::extract_if`
    --> /usr/local/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:3236:12
     |
3234 |     pub fn extract_if<F>(&mut self, filter: F) -> ExtractIf<'_, T, F, A>
     |            ---------- required by a bound in this associated function
3235 |     where
3236 |         F: FnMut(&mut T) -> bool,
     |            ^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Vec::<T, A>::extract_if`

--- common/systems/src/mount.rs.orig	2025-01-29 18:05:18 UTC
+++ common/systems/src/mount.rs
@@ -71,7 +71,7 @@ impl<'a> System<'a> for Sys {
                             if !matches!(body, Some(Body::Humanoid(_))) {
                                 let actions = c
                                     .actions
-                                    .extract_if(.., |action| match action {
+                                    .extract_if(|action| match action {
                                         ControlAction::StartInput { input: i, .. }
                                         | ControlAction::CancelInput(i) => matches!(
                                             i,
@@ -180,7 +180,7 @@ impl<'a> System<'a> for Sys {
             let inputs = controllers.get_mut(entity).map(|c| {
                 let actions: Vec<_> = c
                     .actions
-                    .extract_if(.., |action| match action {
+                    .extract_if(|action| match action {
                         ControlAction::StartInput { input: i, .. }
                         | ControlAction::CancelInput(i) => {
                             matches!(i, InputKind::Jump | InputKind::Fly | InputKind::Roll)

memalign is Linux-specific, so use C11 aligned_alloc instead

In file included from media_driver/agnostic/common/os/mos_utilities.c:36:
/usr/include/malloc.h:3:2: error: "<malloc.h> has been replaced by <stdlib.h>"
#error "<malloc.h> has been replaced by <stdlib.h>"
 ^
media_driver/agnostic/common/os/mos_utilities.c:3096:11: error: use of undeclared identifier 'memalign'
    ptr = _aligned_malloc(size, alignment);
          ^
media_driver/linux/common/os/mos_utilities_specific.h:91:43: note: expanded from macro '_aligned_malloc'
#define _aligned_malloc(size, alignment)  memalign(alignment, size)
                                          ^

--- media_driver/agnostic/common/os/mos_utilities.c.orig	2018-10-01 21:39:52 UTC
+++ media_driver/agnostic/common/os/mos_utilities.c
@@ -33,7 +33,6 @@
 #endif
 #include <fcntl.h>     //open
 
-#include <malloc.h>    // For memalign
 #include <string.h>    // memset
 #include <stdlib.h>    // atoi atol
 #include <math.h>
--- media_driver/agnostic/ult/cm/buffer_up_test.cpp.orig	2018-10-01 21:39:52 UTC
+++ media_driver/agnostic/ult/cm/buffer_up_test.cpp
@@ -21,7 +21,6 @@
 */
 
 #include "cm_test.h"
-#include <malloc.h>
 
 class BufferUPTest: public CmTest
 {
--- media_driver/linux/common/os/mos_utilities_specific.h.orig	2018-10-01 21:39:52 UTC
+++ media_driver/linux/common/os/mos_utilities_specific.h
@@ -88,7 +88,7 @@
 #define UFINT_PATH_LINUX            "UFINT"
 #define UFEXT_PATH_LINUX            "UFEXT"
 
-#define _aligned_malloc(size, alignment)  memalign(alignment, size)
+#define _aligned_malloc(size, alignment)  aligned_alloc(alignment, size)
 #define _aligned_free(ptr)                free(ptr)
 
 #define __MOS_USER_FEATURE_KEY_MESSAGE_DEFAULT_VALUE_STR     "1"
--- media_driver/linux/ult/ult_app/cm/cm_test.h.orig	2018-10-01 21:39:52 UTC
+++ media_driver/linux/ult/ult_app/cm/cm_test.h
@@ -23,7 +23,6 @@
 #ifndef MEDIADRIVER_LINUX_CODECHAL_ULT_ULTAPP_CMTEST_H_
 #define MEDIADRIVER_LINUX_CODECHAL_ULT_ULTAPP_CMTEST_H_
 
-#include <malloc.h>
 #include "gtest/gtest.h"
 #include "mock_device.h"
 #include "../memory_leak_detector.h"
@@ -34,7 +33,7 @@ class CmTest: public testing::Test
 {
 public:
     static void* AllocateAlignedMemory(size_t size, size_t alignment)
-    { return memalign(alignment, size); }
+    { return aligned_alloc(alignment, size); }
 
     static void FreeAlignedMemory(void *memory) { free(memory); }
 
--- media_driver/media_driver_next/agnostic/common/os/mos_utilities_next.cpp.orig	2019-08-29 07:26:40 UTC
+++ media_driver/media_driver_next/agnostic/common/os/mos_utilities_next.cpp
@@ -30,7 +30,6 @@
 #include "mos_util_user_interface_next.h"
 #include <sstream>
 #include <fcntl.h>     //open
-#include <malloc.h>    // For memalign
 #include <string.h>    // memset
 #include <stdlib.h>    // atoi atol
 #include <math.h>

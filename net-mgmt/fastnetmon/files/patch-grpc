Obtained from:	https://github.com/pavel-odintsov/fastnetmon/commit/a9163b6e0e6e5a7b87f85b89873fe547eaed4af7

--- fastnetmon_api_client.cpp.orig	2024-07-01 20:01:34 UTC
+++ fastnetmon_api_client.cpp
@@ -90,10 +90,6 @@ class FastnetmonClient {
     std::unique_ptr<Fastnetmon::Stub> stub_;
 };
 
-void silent_logging_function(gpr_log_func_args* args) {
-    // We do not want any logging here
-}
-
 int main(int argc, char** argv) {
     std::string supported_commands_list = "ban, unban, get_banlist";
 
@@ -101,8 +97,6 @@ int main(int argc, char** argv) {
         std::cerr << "Please provide command as argument, supported commands: " << supported_commands_list << std::endl;
         return 1;
     }
-
-    gpr_set_log_function(silent_logging_function);
 
     // Instantiate the client. It requires a channel, out of which the actual RPCs
     // are created. This channel models a connection to an endpoint (in this case,
--- fastnetmon.cpp.orig	2024-07-01 20:01:34 UTC
+++ fastnetmon.cpp
@@ -472,10 +472,6 @@ void interruption_signal_handler(int signal_number);
 void interruption_signal_handler(int signal_number);
 
 #ifdef FASTNETMON_API
-void silent_logging_function(gpr_log_func_args* args) {
-    // We do not want any logging here
-}
-
 // We could not define this variable in top of the file because we should define class before
 FastnetmonApiServiceImpl api_service;
 
@@ -1749,10 +1745,6 @@ int main(int argc, char** argv) {
         ifs.close();
         std::filesystem::remove(fastnetmon_platform_configuration.backtrace_path);
     }
-
-#ifdef FASTNETMON_API
-    gpr_set_log_function(silent_logging_function);
-#endif
 
     // Set default ban configuration
     init_global_ban_settings();

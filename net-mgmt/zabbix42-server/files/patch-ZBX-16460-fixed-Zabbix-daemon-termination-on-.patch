From a62b1cfefc184b0c5b6d70e2d6a3de0284b31ffd Mon Sep 17 00:00:00 2001
From: Vladislavs Sokurenko <vladislavs.sokurenko@zabbix.com>
Date: Thu, 29 Aug 2019 17:02:29 +0300
Subject: [PATCH 3/4] ...G...PS. [ZBX-16460] fixed Zabbix daemon termination on
 FreeBSD

* commit '7eb515175340160a502a58eacb719d6eaf522340':
  ...G...PS. [ZBX-16460] fixed Zabbix daemon termination on FreeBSD
  .......... [ZBX-16460] fixed Zabbix daemon exit on FreeBSD

(cherry picked from commit 10aee49918fbf54655d4c479689c7f62a8a1b45d)
(cherry picked from commit 890ef645e5fd678ececfeba1feb3144509d1cbd5)
---
 ChangeLog.d/bugfix/ZBX-16460           |  1 +
 include/threads.h                      |  2 +-
 src/libs/zbxcrypto/tls.c               | 18 +++++++++---------
 src/libs/zbxlog/log.c                  |  2 +-
 src/libs/zbxnix/fatal.c                |  2 +-
 src/libs/zbxnix/sighandler.c           |  8 ++++----
 src/libs/zbxsys/threads.c              |  2 +-
 src/zabbix_get/zabbix_get.c            |  2 +-
 src/zabbix_sender/zabbix_sender.c      |  2 +-
 src/zabbix_server/poller/checks_snmp.c |  2 +-
 10 files changed, 21 insertions(+), 20 deletions(-)
 create mode 100644 ChangeLog.d/bugfix/ZBX-16460

diff --git ChangeLog.d/bugfix/ZBX-16460 ChangeLog.d/bugfix/ZBX-16460
new file mode 100644
index 0000000000..c40d5d5ac3
--- /dev/null
+++ ChangeLog.d/bugfix/ZBX-16460
@@ -0,0 +1 @@
+...G...PS. [ZBX-16460] fixed Zabbix daemon termination on FreeBSD (vso)
diff --git include/threads.h include/threads.h
index 2c8fef6196..c3b6d451ea 100644
--- include/threads.h
+++ include/threads.h
@@ -73,7 +73,7 @@
 	#define zbx_sleep(sec) sleep((sec))
 
 	#define zbx_thread_kill(h) kill(h, SIGUSR2)
-	#define zbx_thread_kill_fatal(h) kill(h, SIGABRT)
+	#define zbx_thread_kill_fatal(h) kill(h, SIGHUP)
 #endif	/* _WINDOWS */
 
 typedef struct
diff --git src/libs/zbxcrypto/tls.c src/libs/zbxcrypto/tls.c
index eef77e6575..7bf9515ad4 100644
--- src/libs/zbxcrypto/tls.c
+++ src/libs/zbxcrypto/tls.c
@@ -2710,12 +2710,12 @@ void	zbx_tls_init_child(void)
 	zabbix_log(LOG_LEVEL_DEBUG, "In %s()", __func__);
 
 #ifndef _WINDOWS
-	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGABRT to */
+	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGHUP to */
 	/* child processes which may be on their way to exit on their own - do not interrupt them, block signal */
-	/* SIGABRT and unblock it when TLS parameters are good and libraries are initialized. */
+	/* SIGHUP and unblock it when TLS parameters are good and libraries are initialized. */
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGTERM);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 	sigaddset(&mask, SIGUSR2);
 	sigaddset(&mask, SIGQUIT);
 	sigprocmask(SIG_BLOCK, &mask, &orig_mask);
@@ -2905,12 +2905,12 @@ void	zbx_tls_init_child(void)
 	zabbix_log(LOG_LEVEL_DEBUG, "In %s()", __func__);
 
 #ifndef _WINDOWS
-	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGABRT to */
+	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGHUP to */
 	/* child processes which may be on their way to exit on their own - do not interrupt them, block signal */
-	/* SIGABRT and unblock it when TLS parameters are good and libraries are initialized. */
+	/* SIGHUP and unblock it when TLS parameters are good and libraries are initialized. */
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGTERM);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 	sigaddset(&mask, SIGUSR2);
 	sigaddset(&mask, SIGQUIT);
 	sigprocmask(SIG_BLOCK, &mask, &orig_mask);
@@ -3194,12 +3194,12 @@ void	zbx_tls_init_child(void)
 	zabbix_log(LOG_LEVEL_DEBUG, "In %s()", __func__);
 
 #ifndef _WINDOWS
-	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGABRT to */
+	/* Invalid TLS parameters will cause exit. Once one process exits the parent process will send SIGHUP to */
 	/* child processes which may be on their way to exit on their own - do not interrupt them, block signal */
-	/* SIGABRT and unblock it when TLS parameters are good and libraries are initialized. */
+	/* SIGHUP and unblock it when TLS parameters are good and libraries are initialized. */
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGTERM);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 	sigaddset(&mask, SIGUSR2);
 	sigaddset(&mask, SIGQUIT);
 	sigprocmask(SIG_BLOCK, &mask, &orig_mask);
diff --git src/libs/zbxlog/log.c src/libs/zbxlog/log.c
index 916d7fb232..2e63ce8eb9 100644
--- src/libs/zbxlog/log.c
+++ src/libs/zbxlog/log.c
@@ -239,7 +239,7 @@ static void	lock_log(void)
 	sigaddset(&mask, SIGTERM);
 	sigaddset(&mask, SIGINT);
 	sigaddset(&mask, SIGQUIT);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 
 	if (0 > sigprocmask(SIG_BLOCK, &mask, &orig_mask))
 		zbx_error("cannot set sigprocmask to block the user signal");
diff --git src/libs/zbxnix/fatal.c src/libs/zbxnix/fatal.c
index bda471d164..7ea6918e96 100644
--- src/libs/zbxnix/fatal.c
+++ src/libs/zbxnix/fatal.c
@@ -58,7 +58,7 @@ const char	*get_signal_name(int sig)
 		case SIGSEGV:	return "SIGSEGV";
 		case SIGBUS:	return "SIGBUS";
 		case SIGQUIT:	return "SIGQUIT";
-		case SIGABRT:	return "SIGABRT";
+		case SIGHUP:	return "SIGHUP";
 		case SIGINT:	return "SIGINT";
 		case SIGTERM:	return "SIGTERM";
 		case SIGPIPE:	return "SIGPIPE";
diff --git src/libs/zbxnix/sighandler.c src/libs/zbxnix/sighandler.c
index d244c5cc7b..96aa86c32b 100644
--- src/libs/zbxnix/sighandler.c
+++ src/libs/zbxnix/sighandler.c
@@ -95,7 +95,7 @@ static void	alarm_signal_handler(int sig, siginfo_t *siginfo, void *context)
  *                                                                            *
  * Function: terminate_signal_handler                                         *
  *                                                                            *
- * Purpose: handle terminate signals: SIGABRT, SIGINT, SIGTERM, SIGUSR2       *
+ * Purpose: handle terminate signals: SIGHUP, SIGINT, SIGTERM, SIGUSR2        *
  *                                                                            *
  ******************************************************************************/
 static void	terminate_signal_handler(int sig, siginfo_t *siginfo, void *context)
@@ -103,8 +103,8 @@ static void	terminate_signal_handler(int sig, siginfo_t *siginfo, void *context)
 	if (!SIG_PARENT_PROCESS)
 	{
 		/* the parent process can either politely ask a child process to finish it's work and perform cleanup */
-		/* by sending SIGUSR2 or terminate child process immediately without cleanup by sending SIGABRT       */
-		if (SIGABRT == sig)
+		/* by sending SIGUSR2 or terminate child process immediately without cleanup by sending SIGHUP        */
+		if (SIGHUP == sig)
 			exit_with_failure();
 
 		if (SIGUSR2 == sig)
@@ -180,7 +180,7 @@ void	zbx_set_common_signal_handlers(void)
 	phan.sa_sigaction = terminate_signal_handler;
 	sigaction(SIGINT, &phan, NULL);
 	sigaction(SIGQUIT, &phan, NULL);
-	sigaction(SIGABRT, &phan, NULL);
+	sigaction(SIGHUP, &phan, NULL);
 	sigaction(SIGTERM, &phan, NULL);
 	sigaction(SIGUSR2, &phan, NULL);
 
diff --git src/libs/zbxsys/threads.c src/libs/zbxsys/threads.c
index 16fcc3f90b..aedd12ccba 100644
--- src/libs/zbxsys/threads.c
+++ src/libs/zbxsys/threads.c
@@ -61,7 +61,7 @@ void	zbx_child_fork(pid_t *pid)
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGTERM);
 	sigaddset(&mask, SIGUSR2);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 	sigaddset(&mask, SIGINT);
 	sigaddset(&mask, SIGQUIT);
 	sigaddset(&mask, SIGCHLD);
diff --git src/zabbix_get/zabbix_get.c src/zabbix_get/zabbix_get.c
index fe3152d7e2..9f3cfc6ebb 100644
--- src/zabbix_get/zabbix_get.c
+++ src/zabbix_get/zabbix_get.c
@@ -458,7 +458,7 @@ int	main(int argc, char **argv)
 	signal(SIGINT, get_signal_handler);
 	signal(SIGQUIT, get_signal_handler);
 	signal(SIGTERM, get_signal_handler);
-	signal(SIGABRT, get_signal_handler);
+	signal(SIGHUP, get_signal_handler);
 	signal(SIGALRM, get_signal_handler);
 	signal(SIGPIPE, get_signal_handler);
 #endif
diff --git src/zabbix_sender/zabbix_sender.c src/zabbix_sender/zabbix_sender.c
index fdbdfc2a97..7440bcab66 100644
--- src/zabbix_sender/zabbix_sender.c
+++ src/zabbix_sender/zabbix_sender.c
@@ -511,7 +511,7 @@ static	ZBX_THREAD_ENTRY(send_value, args)
 	signal(SIGINT, send_signal_handler);
 	signal(SIGQUIT, send_signal_handler);
 	signal(SIGTERM, send_signal_handler);
-	signal(SIGABRT, send_signal_handler);
+	signal(SIGHUP, send_signal_handler);
 	signal(SIGALRM, send_signal_handler);
 #endif
 	switch (configured_tls_connect_mode)
diff --git src/zabbix_server/poller/checks_snmp.c src/zabbix_server/poller/checks_snmp.c
index 08ecf71d86..68411321c1 100644
--- src/zabbix_server/poller/checks_snmp.c
+++ src/zabbix_server/poller/checks_snmp.c
@@ -2124,7 +2124,7 @@ void	zbx_init_snmp(void)
 	sigemptyset(&mask);
 	sigaddset(&mask, SIGTERM);
 	sigaddset(&mask, SIGUSR2);
-	sigaddset(&mask, SIGABRT);
+	sigaddset(&mask, SIGHUP);
 	sigaddset(&mask, SIGQUIT);
 	sigprocmask(SIG_BLOCK, &mask, &orig_mask);
 
-- 
2.23.0


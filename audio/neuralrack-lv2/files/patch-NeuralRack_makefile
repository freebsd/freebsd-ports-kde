--- NeuralRack/makefile.orig	2025-04-02 08:41:27 UTC
+++ NeuralRack/makefile
@@ -2,14 +2,14 @@
 	# check on which OS we build
 	UNAME_S := $(shell uname -s)
 	# check which architecture we build on
-	UNAME_M := $(shell uname -m)
+	UNAME_M := $(shell uname -m | sed 's/amd64/x86_64/')
 	# check which architecture we build for
 	TARGET_ARCH = UNKNOWN
 	# check if user is root
 	user = $(shell whoami)
-	ifeq ($(user),root)
-	INSTALL_DIR = /usr/lib/lv2
-	EXE_INSTALL_DIR = /usr/bin
+	ifneq ($(DESTDIR),)
+	INSTALL_DIR = $(PREFIX)/lib/lv2
+	EXE_INSTALL_DIR = $(PREFIX)/bin
 	else 
 	INSTALL_DIR = ~/.lv2
 	EXE_INSTALL_DIR = ~/bin
@@ -30,9 +30,6 @@ ifeq ($(TARGET), Linux)
 # check if clang is available
 ifeq ($(TARGET), Linux)
   CXX_VERSION = $(shell clang++ --version 2>/dev/null)
-  ifneq ($(CXX_VERSION),)
-    CXX := clang++    
-  endif
 endif
 
 # get flags supported by CPU
@@ -142,7 +139,7 @@ endif
 
 	NAME = NeuralRack
 	space := $(subst ,, )
-	EXEC_NAME := Neuralrack
+	EXEC_NAME := NeuralRack
 	BUNDLE = $(EXEC_NAME).lv2
 	LIB_DIR := ../libxputty/libxputty/
 	HEADER_DIR := $(LIB_DIR)include/
@@ -421,13 +418,13 @@ ifneq ("$(wildcard ../bin/$(EXEC_NAME)$(EXE_EXT))","")
 	$(QUIET)mkdir -p $(DESTDIR)$(EXE_INSTALL_DIR)/
 	$(QUIET)cp -r ../bin/$(EXEC_NAME)$(EXE_EXT) $(DESTDIR)$(EXE_INSTALL_DIR)/$(EXEC_NAME)$(EXE_EXT)
 
-  ifeq ($(user),root)
+  #ifeq ($(user),root)
 	$(QUIET)mkdir -p $(DESTDIR)$(DESKAPPS_DIR)
 	$(QUIET)cp $(STANDALONE_DIR)$(EXEC_NAME).desktop $(DESTDIR)$(DESKAPPS_DIR)$(NAME).desktop
 	$(QUIET)mkdir -p $(DESTDIR)$(PIXMAPS_DIR)
 	$(QUIET)cp $(STANDALONE_DIR)$(EXEC_NAME).svg $(DESTDIR)$(PIXMAPS_DIR)$(EXEC_NAME).svg 
-	$(QUIET)update-desktop-database || true
-  endif
+	#$(QUIET)update-desktop-database || true
+  #endif
 	@$(B_ECHO) ". ., done$(reset)"
 else
 	@$(B_ECHO) "$(EXEC_NAME)$(EXE_EXT) standalone skipped$(reset)"
